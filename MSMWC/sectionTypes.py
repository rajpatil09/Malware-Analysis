import copy
import glob as gb
import re
import collections
import string

class sectionTypes:
	
	trainlabels = {}
	
	def __init__(self, p, lbls, resfile):
		self.path = p
		self.lblfile = lbls 
		self.featureStatsFile=resfile
		self.filecnt = 0
		self.linecnt = 0
		self.currentFile = ""
		
		self.sectionLabels = set({}) #{"Labels"}
		self.sectionFrequency = {}
		self.baseFrequency = {}
		self.featurevals = {}
		self.flag = False
		
		self.intializeFrequency()
		self.loadLabels()
		#self.createFiles()
		

	#def createFiles(self):
		#fw = open(self.featureStatsFile,'w', encoding='ISO-8859-1')#utf-8')
		#fw.close()

	def intializeFrequency(self):
		f = open(self.featureStatsFile, "r")
		line = f.readline();
		f.close()
		sects = line.split(",")
		for sect in sects:
			sect = sect.strip()
			if(sect != ""):
				self.baseFrequency[sect] = 0
				#print("--",sect,"--")
		#print("section-metadata:",line)	 
				
		#for key,val in self.baseFrequency.items():
		#	print("KEY::",key,",  VAL::",val)
		

	def loadLabels(self):
		fl = open(self.lblfile,'r')
		fl.readline()
		for line in fl:
			line = line.replace("\"","")
			line = line.rstrip('\n')
			keyval = line.split(",")
			sectionFeatures.trainlabels[keyval[0]] = keyval[1]
		fl.close()

		#for key,val in sectionFeatures.trainlabels.items():
		#	print("ID::",key,",  CLASS::",val)

	def getLabel(self, file):	
		wrds = file.split('/')
		cnt = len(wrds)
		mwfile = wrds[cnt-1]
		extn = mwfile.split(".")
		mwfile = extn[0].strip()
		lbl = sectionFeatures.trainlabels.get(mwfile)
		jstlbl = lbl
		lbl += "," + mwfile		
		self.featurevals += lbl
		features = self.featurevals.split(",")
		self.featurevals += ","+ str(len(features)+1)
		print('#File-cnt::', self.filecnt,'    #File-Name::', mwfile,'    #File-Label::', jstlbl,'    #FeatureCount::', str(len(features)+1))
	
	
	def printFileAnalysis(self, file):
		#self.sectionFrequency = collections.OrderedDict(sorted(self.sectionFrequency.items(), key=lambda t: t[0]))#, reverse=True))
		self.featurevals=""
		#print("\n\n#########FREQUENCY-COUNTS########\n\n")	 
		for k,v in self.sectionFrequency.items():
			#print(k,'<<>>',v)
			self.featurevals += str(v)+","
		
		self.getLabel(file)
		self.outputFile()


	def outputFile(self):		
		fw = open(self.featureStatsFile,'a')
		#self.featurevals = self.featurevals[0:(len(self.featurevals)-1)]
		fw.write('\n')
		fw.write(self.featurevals)
		fw.close()


	
	def getFileName(self, file):
		wrds = file.split('/')
		return wrds[len(wrds)-1]



	def processFiles(self):
		for file in gb.glob(self.path+"*.asm"):
			#file = "C:/Users/RajPatil09/Desktop/0Q4ALVSRnlHUBjyOb1sw.asm"
			file = file.replace("\\","/")
			self.linecnt = 0
			self.filecnt+= 1
			self.currentFile = self.getFileName(file)
			
			#self.flag = False
			#self.getSection(file)
			#if(self.flag):
				#self.outputLabels()
			
			self.countSections(file)
			self.printFileAnalysis(file)
			
			#if(self.filecnt == 2):
			#	break

		print('#Files processed:',self.filecnt)		
		


	def outputLabels(self):		
		fw = open(self.featureStatsFile,'a', encoding='ISO-8859-1')#utf-8')
		line = self.currentFile+","
		for items in self.sectionLabels:
			#print("--",items,"--")
			line += items+","
		fw.write(line+"\n")
		fw.close()


	def countSections(self, filename):
		#self.sectionFrequency = {}
		self.sectionFrequency = copy.deepcopy(self.baseFrequency)
		f = open(filename, "r", encoding = "ISO-8859-1")
		try:
			for line in f:
				self.linecnt += 1
				
				#print('Before::',line)
				line = re.sub(r'[^\x20-\x7e]',r'', line)
				#print('After::', line)
				
				regex1 = re.search('^.*?:', line)
				if regex1:
					seclbl = regex1.group(0).replace(":","")
					#print('SecLabel:',seclbl)
					regex2 = re.findall('[^a-zA-Z0-9:._]', seclbl)
					
					if not regex2:
						#print('LabelFound:',seclbl)
						if seclbl in self.sectionFrequency:
							self.sectionFrequency[seclbl] +=1
						#else:
							#self.sectionFrequency[word] = 1
		
		except Exception as e:
			print("Ex::",e)

		f.close()


	def getSection(self, filename):
		f = open(filename, "r", encoding = "ISO-8859-1")
		try:
			for line in f:
				self.linecnt += 1
				
				#print('Before::',line)
				line = re.sub(r'[^\x20-\x7e]',r'', line)
				#print('After::', line)
				
				regex1 = re.search('^.*?:', line)
				if regex1:
					seclbl = regex1.group(0).replace(":","")
					#print('SecLabel:',seclbl)
					regex2 = re.findall('[^a-zA-Z0-9:._]', seclbl)
					
					if not regex2:
						#print('LabelFound:',seclbl)
						if seclbl not in self.sectionLabels:
							self.sectionLabels.add(seclbl)
							self.flag = True
							print('CurrentFile',self.currentFile,',  FileCnt:',self.filecnt,',  SectionLabels:', len(self.sectionLabels))	
					else:
						print('NotALabel:',len(regex2))

		except Exception as e:
			print("Ex::",e)
			#print('Exception::','CurrentFile',self.currentFile,',  FileCnt:',self.filecnt)

		f.close()

				
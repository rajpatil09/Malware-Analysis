import collections

class topCalls:

	def __init__(self):
		self.syscallFrequency = {}
		self.subset = {}
		

	def calcFrequency(self):
		
		inx = 0
		threshold = 0
		f = open('DL/5-SyscallsCount.csv', "r")
		fw = open('DL/SubSyscallsIndexes.csv','w')	
		fw1 = open('DL/SubSyscallsNames.csv','w')		

		line1 = f.readline();
		calls = line1.split(",")
		
		line2 = f.readline();
		cnts = line2.split(",")
		
		f.close()

		print(len(calls),len(cnts))
		
		for call in calls:
			call = call.rstrip('\n')
			cnt = cnts[inx]
			self.syscallFrequency[call] = int(cnt)
			if(int(cnt)>= 100):
				self.subset[call] = int(inx)
				fw.write(str(inx)+',')
				fw1.write(call+',')
				threshold += 1
					
			inx += 1
			 
		fw.close()
		fw1.close()

		self.syscallFrequency = collections.OrderedDict(sorted(self.syscallFrequency.items(), key=lambda t: t[1]))#, reverse=True))
				
		for k,v in self.syscallFrequency.items():
				print(k,'<<>>',v)
		
		print('self.syscallFrequency-len:',len(self.syscallFrequency), '\t threshold: ', threshold)


	def shortList(self):
	
		fw = open('DL/5-SubSyscallsFeatures.csv','w')	
		
		fl = open('DL/SubSyscallsNames.csv','r')
		line = fl.readline()
		fw.write(line+'\n')
		fl.close()
		
		fl = open('DL/SubSyscallsIndexes.csv','r')
		indexes = fl.readline()
		inxs = indexes.split(",")
		fl.close()

		
		fl = open('DL/4_SyscallsFeatures.csv','r')
		fl.readline()
		row = 0

		for line in fl:						#go through each row
			calls = line.split(",")
			
			for inx in inxs:				#go through subset of columns
				col = int(inx)
				s = str(calls[col])

				#if(s != '73612'): 	 	
				if(col != 73611):			#if not a last column
					fw.write(s+',')
				else:
					fw.write(s)			
		
			row +=1 
			print('row-count:'+str(row))
			#if(row == 5):
				#break
			
		fl.close()
		fw.close()
	
tc = topCalls()
#tc.calcFrequency()
tc.shortList()